Typical Kahn's algo implementation

class Solution {
    public int[] findOrder(int numCourses, int[][] prerequisites) {
        List<List<Integer>> adj = new ArrayList<>();
        int[] inDeg = new int[numCourses];

        for(int i=0; i<numCourses; i++){
            adj.add(new ArrayList<>());
        }

        for(int i=0; i<prerequisites.length; i++){
            int u = prerequisites[i][1];
            int v = prerequisites[i][0];

            adj.get(u).add(v);
            inDeg[v]++;
        }

        Queue<Integer> q = new LinkedList<>();
        List<Integer> list = new ArrayList<>();

        for(int i=0; i<numCourses; i++){
            if(inDeg[i] == 0) q.add(i);
        }

        while(!q.isEmpty()){
            int node = q.poll();
            list.add(node);

            for(int v : adj.get(node)){
                inDeg[v]--;
                if(inDeg[v] == 0) q.add(v);
            }
        }

        if(list.size() != numCourses) return new int[] {};
        
        int[] ans = new int[list.size()];

        for(int i=0; i<list.size(); i++){
            ans[i] = list.get(i);
        }

        return ans;
    }
}
